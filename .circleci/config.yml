version: 2.1

jobs:
  build_and_test:
    docker:
      - image: circleci/node:lts
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "20:9f:da:0b:18:17:9b:5f:df:54:3c:d7:64:db:25:37"
      - run:
          name: Build and Test
          command: |
            echo "build stuff here"
      - run:
          name: Try semantic-release dry run
          command: |
            npx -p @semantic-release/git -p semantic-release semantic-release --branch ${CIRCLE_BRANCH} --dry-run

  test-save-env-var-between-steps:
      docker:
      - image: cimg/base:stable-20.04 
    working_directory: ~/repo
    steps:
      - run:
          name: Set env var and save to bashenv
          command: |
            export some_var=abc
            echo "some_var=${some_var}"
            echo "export some_var=\"${some_var}\"" >> $BASH_ENV

      - run:
          name: See if env var is set
          command: |
            echo "some_var=${some_var}"

  test-conditionals:
    docker:
      - image: cimg/base:stable-20.04 
        environment:
          TEST_ENV_VAR_0: 0
          TEST_ENV_VAR_1: 1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Build and Test
          command: |
            echo "build stuff here"
            echo "TEST_ENV_VAR_0: ${TEST_ENV_VAR_0}"
            echo "TEST_ENV_VAR_1: ${TEST_ENV_VAR_1}"

      - when:
          condition: 0
          steps:
            - run:
                name: Should run only if 0 is truthy
                command: |
                  echo "Should run only if 0 is truthy"
      
      - when:
          condition: 1
          steps:
            - run:
                name: Should run only if 1 is considered truthy
                command: |
                  echo "Should run only if 1 is considered truthy"

      - when:
          condition: "something"
          steps:
            - run:
                name: Should run only if non-empty text is truthy
                command: |
                  echo "Should run only if non-empty text is truthy"

      - when:
          condition: ""
          steps:
            - run:
                name: Should run only if empty text is truthy
                command: |
                  echo "Should run only if empty text is truthy"

      - when:
          condition: $(echo hello)
          steps:
            - run:
                name: Should run only if non-empty text from command is truthy
                command: |
                  echo "Should run only if non-empty text from command is truthy"
                  
      - when:
          condition: $(echo '')
          steps:
            - run:
                name: Should run only if empty text from command is truthy
                command: |
                  echo "Should run only if empty text from command is truthy"

      - when:
          condition: $(echo "")
          steps:
            - run:
                name: Should run only if empty text from command is truthy (double quotes)
                command: |
                  echo "Should run only if empty text from command is truthy (double quotes)"

      - when:
          condition: $TEST_ENV_VAR_0
          steps:
            - run:
                name: Should run only if TEST_ENV_VAR_0 is truthy (double quotes)
                command: |
                  echo "Should run only if TEST_ENV_VAR_0 is truthy (double quotes)"

      - when:
          condition: $TEST_ENV_VAR_1
          steps:
            - run:
                name: Should run only if TEST_ENV_VAR_1 is truthy (double quotes)
                command: |
                  echo "Should run only if TEST_ENV_VAR_1 is truthy (double quotes)"

      - when:
          condition: 
            equal: [ 0, $TEST_ENV_VAR_0 ]
          steps:
            - run:
                name: Should run only if 0 equals TEST_ENV_VAR_0 is truthy (double quotes)
                command: |
                  echo "Should run only if 0 equals TEST_ENV_VAR_0 is truthy (double quotes)"

      - when:
          condition: 
            equal: [ 1, $TEST_ENV_VAR_0 ]
          steps:
            - run:
                name: Should run only if 1 equals TEST_ENV_VAR_0 is truthy (double quotes)
                command: |
                  echo "Should run only if 1 equals TEST_ENV_VAR_0 is truthy (double quotes)"

  release:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - run:
          name: Build and Release
          command: |
            npx -p @semantic-release/git -p semantic-release semantic-release --branch ${CIRCLE_BRANCH} --dry-run  > sem-rel-dry-run.txt
            cat sem-rel-dry-run.txt
            if grep "The next release version is" sem-rel-dry-run.txt
            then
              echo "do release"
              next_version=$(cat sem-rel-dry-run.txt | grep "The next release version is" | sed -n -e 's/^.*is //p')
              echo "next_version: ${next_version}"              
              ls -la
              sed -i "s|REPLACE_ORB_VERSION|${next_version}|g" thing-with-version.yml
              echo "modified yaml file:"
              # cat thing-with-version.yml
              npx -p @semantic-release/git -p semantic-release semantic-release --branch ${CIRCLE_BRANCH}
            else
              echo "don't do release"
            fi

workflows:
  version: 2
  build_test_release:
    jobs:
      - test-save-env-var-between-steps
      - test-conditionals
      - build_and_test
      - release:
          requires:
            - build_and_test
          filters:
            branches:
              only: master
